@inject IJSRuntime jsruntime
@inject NavigationManager navigation

<div id="footer-bar" class="footer-bar-6">
    <a href="/local" @onclick="@(()=> SetFocus("Local"))" class="@classFocusLocal">
        <i class="fa fa-layer-group"></i>
        <span>Thư viện</span>
    </a>
    <a href="/reading" @onclick="@(()=> SetFocus("Reading"))" class="@classFocusReading">
        <i class="fa fa-layer-group"></i>
        <span>Thư viện</span>
    </a>
    <a href="/" @onclick="@(()=> SetFocus("Home"))" class="@classFocusHome">
        <i class="fa fa-home"></i>
        <span>Welcome</span>
    </a>
    <a href="/news" @onclick="@(()=> SetFocus("News"))" class="@classFocusNews">
        <i class="fa fa-image"></i>
        <span>Tin tức</span>
    </a>
    <a href="#" @onclick="@ShowMenu" data-menu="menu-main">
        <i class="fa fa-bars"></i>
        <span>Danh mục</span>
    </a>
</div>
<script>
    function footerbarActivation() {
        var footerBar6 = document.querySelectorAll('.footer-bar-6')[0];
        if (footerBar6) {
            var footerBar6_select = document.querySelectorAll('.footer-bar-6 .active-nav')[0];
            var footerBar6_circle = document.querySelectorAll('.footer-bar-6 .circle-nav')[0];
            footerBar6_select.insertAdjacentHTML('beforeend', '<em></em>');
            footerBar6_circle.insertAdjacentHTML('beforeend', '<strong><u></u></strong>');
        }
    }
</script>
@code {
    string classFocusHome = "circle-nav active-nav";
    string classFocusLocal = "";
    string classFocusNews = "";
    string classFocusReading = "";
   
    [CascadingParameter]
    public MainLayout mainLayout { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await jsruntime.InvokeVoidAsync("footerbarActivation");
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private async void ShowMenu()
    {
        if (mainLayout.IsShowMenu)
        {
            mainLayout.IsShowMenu = false;
            await jsruntime.InvokeVoidAsync("menu","menu-main","hide",250);
            await InvokeAsync(StateHasChanged);
        }
        else
        {
            await jsruntime.InvokeVoidAsync("menu", "menu-main", "show", 250);
            mainLayout.IsShowMenu = true;
            await InvokeAsync(StateHasChanged);
        }
    }
    private async void SetFocus(string Name)
    {
        if (Name == "Local")
        {
            classFocusLocal = "circle-nav active-nav";
            classFocusHome = "";
            classFocusNews = "";
            classFocusReading = "";
            navigation.NavigateTo("/local");
        }
        else if (Name == "Home")
        {
            classFocusLocal = "";
            classFocusHome = "circle-nav active-nav";
            classFocusNews = "";
            classFocusReading = "";
            navigation.NavigateTo("/");
        }
        else if (Name == "News")
        {
            classFocusLocal = "";
            classFocusHome = "";
            classFocusNews = "circle-nav active-nav";
            classFocusReading = "";
            navigation.NavigateTo("/news");
        }
        else
        {
            classFocusLocal = "";
            classFocusHome = "";
            classFocusNews = "";
            classFocusReading = "circle-nav active-nav";
            navigation.NavigateTo("/reading");
        }
        await InvokeAsync(StateHasChanged);
        await jsruntime.InvokeVoidAsync("footerbarActivation");
    }
}
